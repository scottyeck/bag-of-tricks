echo "Loading remote bash configuration"
echo "..."

# npm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvmCKAGES="${HOME}/.npm-packages"

# yarn
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# manpages
unset MANPATH
export MANPATH="$NPM_PACKAGES/share/man:$(manpath)"

# dotfiles
PATH="$PATH:$DOTFILES_PATH/bin"

# node_modules
PATH="$PATH:$DOTFILES_PATH/node_modules/.bin"

# cargo
PATH="$PATH:$HOME/.cargo/bin"

# go
PATH="$PATH:/usr/local/go/bin"

# sqlite, via brew
# > sqlite is keg-only, which means it was not symlinked into /usr/local,
# > because macOS provides an older sqlite3.
PATH="$PATH:/usr/local/opt/sqlite/bin"

# todo.txt
export TODOTXT_CFG_FILE=$DOTFILES_PATH/rc/todo.cfg

# Ensure we're using the corect ctags
# @see https://www.freecodecamp.org/news/make-your-vim-smarter-using-ctrlp-and-ctags-846fc12178a4/
alias ctags="$(brew --prefix)/bin/ctags"

export PATH
export EDITOR='vim'

# Log bash history
# @see https://spin.atomicobject.com/2016/05/28/log-bash-history/
mkdir -p ~/.logs
export PROMPT_COMMAND='if [ "$(id -u)" -ne 0 ]; then echo "$(date "+%Y-%m-%d.%H:%M:%S") $(pwd) $(history 1)" >> ~/.logs/bash-history-$(date "+%Y-%m-%d").log; fi'

# If vim is launched inside a Neovim terminal, launch
# vanilla vim and not neovim.
# @see https://github.com/neovim/neovim/issues/9960#issuecomment-488269954
if [[ -n "${NVIM_LISTEN_ADDRESS}" ]]
then
    # TODO update the path each time Vim has a major upgrade
    export VIMRUNTIME=/usr/share/vim/vim81
fi

LOCAL_CONFIG_FILE="/Users/$USER/.localrc"

if [ -f "$LOCAL_CONFIG_FILE" ]; then
  echo "Loading local bash configuration"
  echo '...'
  source $LOCAL_CONFIG_FILE
  echo "Successfully loaded local bash configuration"
  echo '...'
else
  echo "Warning - No local bash configuration found. You may be missing important environment settings."
  echo "Please ensure the existence of /Users/$USER/.localrc"
  echo "..."
fi

echo "Successfully loaded remote bash configuration"
echo "..."
