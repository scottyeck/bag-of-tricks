#!/bin/bash

# Examples
# grit push -c
# grit push -c -r upstream
# grit checkout -f [query]

# Constants
push="push"
checkout="checkout"
merge="merge"

getBranch () {
  local branch=""
  local OPTIND opt
  while getopts ":cf:" opt; do
    case $opt in
      "c")
        branch="$(git branch | grep \*)"
        ;;
      "f")
        branch="$(git branch | grep $OPTARG)"
        ;;
    esac
  done

  # TODO
  # Need to provide escape hatch if query returns multiple branches
  # Right now it just returns the first one - no good.

  branch="$(echo "$branch" | sed 's/\*//' | awk '{print $1}')"
  echo "$branch"
}

getRemote () {
  local remote=""
  local OPTIND opt
  while getopts ":r:" opt; do
    case $opt in
      "r")
        remote=$OPTARG
        ;;
      esac
  done
  if [ -z $remote ] ; then
    remote="origin"
  fi
  echo "$remote"
}

push () {
  local branch="$(getBranch $@)"
  local remote="$(getRemote $@)"
  git push $remote $branch
}

checkout () {
  local branch="$(getBranch $@)"
  git checkout $branch
}

merge () {
  local branch="$(getBranch $@)"
  git merge $branch
}

grit () {
  local cmd=$1
  if [ $cmd = $push ] ; then
    shift
    push $@
  elif [ $cmd = $checkout ] ; then
    shift
    checkout $@
  elif [ $cmd = $merge ] ; then
    shift
    merge $@
  fi
}

grit "$@"
